import { SignIn, SignInButton, SignOutButton, useUser } from "@clerk/nextjs";
import Head from "next/head";
import Link from "next/link";
import { RouterOutputs, api } from "~/utils/api";

const CreatePostWizard = () => {
  const { user } = useUser();

  if (!user) return null;

  console.log(user);

  return (
    <div className="flex w-full gap-4 ">
      <img
        src={user.profileImageUrl}
        alt="Profile Pic"
        className="h-16 w-16 rounded-full"
      />
      <input
        placeholder="Enter a tweet here!"
        className="bg-transparent outline-none"
      />
    </div>
  );
};

// Type of PostView is whatever getAll returns, so no need to put all fields in manually
type PostWithUser = RouterOutputs["posts"]["getAll"][number];
const PostView = (props: PostWithUser) => {
  const { post, author } = props; // deconstructing to get fields we need
  return (
    <div key={post.id} className="flex gap-3 border-b border-slate-400 p-4">
      <img
        src={author.profileImageUrl}
        alt="Profile Pic"
        className="h-14 w-14 rounded-full"
      />
      <div>
        <div className="flex gap-1 font-thin text-slate-300">
          <span>{`@${author.username!}`}</span>
          <span>{` Â· 1 hour ago`}</span>
        </div>
        <span> {post.content}</span>
      </div>
    </div>
  );
};

export default function Home() {
  const user = useUser();

  const { data, isLoading } = api.posts.getAll.useQuery();

  if (isLoading) return <div>Loading...</div>;
  if (!data) return <div>Something went wrong</div>;

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex h-screen justify-center">
        <div className="w-full border-x border-slate-400 md:max-w-2xl">
          <div className="border-b border-slate-400 p-4">
            {!user.isSignedIn && <SignInButton />}
            {user.isSignedIn && <CreatePostWizard />}
          </div>
          <div className="flex flex-col">
            {data?.map((fullPost) => (
              <PostView {...fullPost} key={fullPost.post.id} />
            ))}
          </div>
        </div>
      </main>
    </>
  );
}
